{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["export interface SkiaValue<T = number> {\n  /**\n   * Gets the value hold by the Value object\n   */\n  readonly current: T;\n  /**\n   * Adds a listener that is called when value changes.\n   * Returns unsubscribe method.\n   */\n  addListener: (cb: (value: T) => void) => () => void;\n  /**\n   * Invalidates the value. Has different meaning depending on the type of the value.\n   */\n  dispose: () => void;\n  /**\n   * Field to make typechecking easier\n   */\n  __typename__: \"RNSkValue\";\n}\n\nexport interface SkiaMutableValue<T = number> extends SkiaValue<T> {\n  /**\n   * Get/sets the value hold by the Value object\n   */\n  current: T;\n  /**\n   * Get/sets the animation controlling the value\n   * */\n  animation: SkiaAnimation | undefined;\n}\n\nexport interface SkiaClockValue extends SkiaValue<number> {\n  start: () => void;\n  stop: () => void;\n}\n\nexport interface SkiaAnimation extends SkiaClockValue {\n  cancel: () => void;\n}\n\nexport interface AnimationState {\n  current: number;\n  finished: boolean;\n}\n\nexport interface ISkiaValueApi {\n  /**\n   * Creates a new value that holds the initial value and that\n   * can be changed.\n   */\n  createValue: <T>(initialValue: T) => SkiaMutableValue<T>;\n  /**\n   * Creates a computed value. This is a calculated value that returns the result of\n   * a function that is called with the values of the dependencies.\n   */\n  createComputedValue: <R>(\n    cb: () => R,\n    values: Array<SkiaValue<unknown>>\n  ) => SkiaValue<R>;\n  /**\n   * Creates a clock value where the value is the number of milliseconds elapsed\n   * since the clock was created\n   */\n  createClockValue: () => SkiaClockValue;\n  /**\n   * Creates an animation that is driven from a clock and updated every frame.\n   * @param cb Callback to calculate next value from time.\n   * @returns An animation object that can control a value.\n   */\n  createAnimation: <S extends AnimationState = AnimationState>(\n    cb: (t: number, state: S | undefined) => S\n  ) => SkiaAnimation;\n}\n"],"mappings":""}