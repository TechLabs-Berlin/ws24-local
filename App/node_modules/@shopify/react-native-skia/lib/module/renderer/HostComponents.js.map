{"version":3,"names":["NodeType","exhaustiveCheck","shouldUseJSDomOnNative","NATIVE_DOM","global","SkiaDomApi","createNode","container","type","props","Sk","Layer","Group","Paint","Fill","Image","Circle","Path","Drawing","CustomDrawing","Line","Oval","Patch","Points","Rect","RRect","Vertices","Text","TextPath","TextBlob","Glyphs","DiffRect","Picture","ImageSVG","BlurMaskFilter","BlendImageFilter","BlurImageFilter","OffsetImageFilter","DropShadowImageFilter","DisplacementMapImageFilter","MorphologyImageFilter","RuntimeShaderImageFilter","MatrixColorFilter","BlendColorFilter","LerpColorFilter","LumaColorFilter","LinearToSRGBGammaColorFilter","SRGBToLinearGammaColorFilter","Shader","ImageShader","ColorShader","Turbulence","FractalNoise","LinearGradient","RadialGradient","SweepGradient","TwoPointConicalGradient","CornerPathEffect","DiscretePathEffect","DashPathEffect","Path1DPathEffect","Path2DPathEffect","SumPathEffect","Line2DPathEffect","Blend","BackdropFilter","Box","BoxShadow"],"sources":["HostComponents.ts"],"sourcesContent":["import { NodeType } from \"../dom/types\";\nimport type {\n  DeclarationNode,\n  FractalNoiseProps,\n  RenderNode,\n  CircleProps,\n  DrawingNodeProps,\n  ImageProps,\n  PaintProps,\n  PathProps,\n  CustomDrawingNodeProps,\n  LineProps,\n  OvalProps,\n  DiffRectProps,\n  PointsProps,\n  RectProps,\n  RoundedRectProps,\n  TextProps,\n  VerticesProps,\n  BlurMaskFilterProps,\n  BlendImageFilterProps,\n  BlurImageFilterProps,\n  DisplacementMapImageFilterProps,\n  DropShadowImageFilterProps,\n  OffsetImageFilterProps,\n  RuntimeShaderImageFilterProps,\n  MatrixColorFilterProps,\n  ShaderProps,\n  ImageShaderProps,\n  LinearGradientProps,\n  GroupProps,\n  PatchProps,\n  BlendColorFilterProps,\n  DashPathEffectProps,\n  DiscretePathEffectProps,\n  CornerPathEffectProps,\n  Line2DPathEffectProps,\n  Path1DPathEffectProps,\n  Path2DPathEffectProps,\n  TextPathProps,\n  TextBlobProps,\n  GlyphsProps,\n  TwoPointConicalGradientProps,\n  TurbulenceProps,\n  SweepGradientProps,\n  RadialGradientProps,\n  ColorProps,\n  PictureProps,\n  ImageSVGProps,\n  LerpColorFilterProps,\n  BoxProps,\n  BoxShadowProps,\n} from \"../dom/types\";\nimport type { ChildrenProps } from \"../dom/types/Common\";\nimport type {\n  BlendProps,\n  MorphologyImageFilterProps,\n} from \"../dom/types/ImageFilters\";\nimport type { SkRect, SkRRect } from \"../skia/types\";\nimport type { JsiDrawingNode } from \"../dom/nodes/DrawingNode\";\nimport type { SkiaValue } from \"../values\";\n\nimport type { Container } from \"./Container\";\nimport { exhaustiveCheck } from \"./typeddash\";\nimport type { SkiaProps } from \"./processors\";\nimport type { DependencyManager } from \"./DependencyManager\";\n\n// This flag should only be turned on for debugging/testing\nconst shouldUseJSDomOnNative = false;\nexport const NATIVE_DOM = shouldUseJSDomOnNative ? false : !!global.SkiaDomApi;\n\ndeclare global {\n  var SkiaDomApi: {\n    DependencyManager: (\n      registerValues: (values: Array<SkiaValue<unknown>>) => () => void\n    ) => DependencyManager;\n\n    // FIXME: We need a better type for this\n    RectNode: (props: RectProps) => JsiDrawingNode<RectProps, SkRect>;\n    RRectNode: (\n      props: RoundedRectProps\n    ) => JsiDrawingNode<RoundedRectProps, SkRRect>;\n    GroupNode: (props: GroupProps) => RenderNode<GroupProps>;\n    PaintNode: (props: PaintProps) => DeclarationNode<PaintProps>;\n    FillNode: (props: PaintProps) => RenderNode<PaintProps>;\n    CircleNode: (props: CircleProps) => RenderNode<CircleProps>;\n    PathNode: (props: PathProps) => RenderNode<PathProps>;\n    CustomDrawingNode: (\n      props: CustomDrawingNodeProps\n    ) => RenderNode<CustomDrawingNodeProps>;\n    LineNode: (props: LineProps) => RenderNode<LineProps>;\n    ImageNode: (props: ImageProps) => RenderNode<ImageProps>;\n    OvalNode: (props: OvalProps) => RenderNode<OvalProps>;\n    PatchNode: (props: PatchProps) => RenderNode<PatchProps>;\n    PointsNode: (props: PointsProps) => RenderNode<PointsProps>;\n    DiffRectNode: (props: DiffRectProps) => RenderNode<DiffRectProps>;\n    // Mask filters\n    BlurMaskFilterNode: (\n      props: BlurMaskFilterProps\n    ) => DeclarationNode<BlurMaskFilterProps>;\n\n    // Path effects\n    DashPathEffectNode: (\n      props: DashPathEffectProps\n    ) => DeclarationNode<DashPathEffectProps>;\n    DiscretePathEffectNode: (\n      props: DiscretePathEffectProps\n    ) => DeclarationNode<DiscretePathEffectProps>;\n    CornerPathEffectNode: (\n      props: CornerPathEffectProps\n    ) => DeclarationNode<CornerPathEffectProps>;\n    Path1DPathEffectNode: (\n      props: Path1DPathEffectProps\n    ) => DeclarationNode<Path1DPathEffectProps>;\n    Path2DPathEffectNode: (\n      props: Path2DPathEffectProps\n    ) => DeclarationNode<Path2DPathEffectProps>;\n    Line2DPathEffectNode: (\n      props: Line2DPathEffectProps\n    ) => DeclarationNode<Line2DPathEffectProps>;\n    SumPathEffectNode: () => DeclarationNode<null>;\n\n    // Image filters\n    BlendImageFilterNode: (\n      props: BlendImageFilterProps\n    ) => DeclarationNode<BlendImageFilterProps>;\n    DropShadowImageFilterNode: (\n      props: DropShadowImageFilterProps\n    ) => DeclarationNode<DropShadowImageFilterProps>;\n    DisplacementMapImageFilterNode: (\n      props: DisplacementMapImageFilterProps\n    ) => DeclarationNode<DisplacementMapImageFilterProps>;\n    BlurImageFilterNode: (\n      props: BlurImageFilterProps\n    ) => DeclarationNode<BlurImageFilterProps>;\n    OffsetImageFilterNode: (\n      props: OffsetImageFilterProps\n    ) => DeclarationNode<OffsetImageFilterProps>;\n    MorphologyImageFilterNode: (\n      props: MorphologyImageFilterProps\n    ) => DeclarationNode<MorphologyImageFilterProps>;\n    RuntimeShaderImageFilterNode: (\n      props: RuntimeShaderImageFilterProps\n    ) => DeclarationNode<RuntimeShaderImageFilterProps>;\n\n    // Color filters\n    MatrixColorFilterNode: (\n      props: MatrixColorFilterProps\n    ) => DeclarationNode<MatrixColorFilterProps>;\n    BlendColorFilterNode: (\n      props: BlendColorFilterProps\n    ) => DeclarationNode<BlendColorFilterProps>;\n    LinearToSRGBGammaColorFilterNode: () => DeclarationNode<null>;\n    SRGBToLinearGammaColorFilterNode: () => DeclarationNode<null>;\n    LumaColorFilterNode: () => DeclarationNode<null>;\n    LerpColorFilterNode: (\n      props: LerpColorFilterProps\n    ) => DeclarationNode<LerpColorFilterProps>;\n\n    // Shaders\n    ShaderNode: (props: ShaderProps) => DeclarationNode<ShaderProps>;\n    ImageShaderNode: (\n      props: ImageShaderProps\n    ) => DeclarationNode<ImageShaderProps>;\n    ColorShaderNode: (props: ColorProps) => DeclarationNode<ColorProps>;\n    TurbulenceNode: (\n      props: TurbulenceProps\n    ) => DeclarationNode<TurbulenceProps>;\n    FractalNoiseNode: (\n      props: FractalNoiseProps\n    ) => DeclarationNode<FractalNoiseProps>;\n    LinearGradientNode: (\n      props: LinearGradientProps\n    ) => DeclarationNode<LinearGradientProps>;\n    RadialGradientNode: (\n      props: RadialGradientProps\n    ) => DeclarationNode<RadialGradientProps>;\n    SweepGradientNode: (\n      props: SweepGradientProps\n    ) => DeclarationNode<SweepGradientProps>;\n    TwoPointConicalGradientNode: (\n      props: TwoPointConicalGradientProps\n    ) => DeclarationNode<TwoPointConicalGradientProps>;\n    PictureNode: (props: PictureProps) => RenderNode<PictureProps>;\n    ImageSVGNode: (props: ImageSVGProps) => RenderNode<ImageSVGProps>;\n    VerticesNode: (props: VerticesProps) => RenderNode<VerticesProps>;\n    TextNode: (prop: TextProps) => RenderNode<TextProps>;\n    TextPathNode: (prop: TextPathProps) => RenderNode<TextPathProps>;\n    TextBlobNode: (prop: TextBlobProps) => RenderNode<TextBlobProps>;\n    GlyphsNode: (prop: GlyphsProps) => RenderNode<GlyphsProps>;\n    BlendNode: (prop: BlendProps) => DeclarationNode<BlendProps>;\n    BackdropFilterNode: (prop: ChildrenProps) => RenderNode<ChildrenProps>;\n    BoxNode: (prop: BoxProps) => RenderNode<BoxProps>;\n    BoxShadowNode: (prop: BoxShadowProps) => DeclarationNode<BoxShadowProps>;\n    LayerNode: (prop: ChildrenProps) => RenderNode<ChildrenProps>;\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      skGroup: SkiaProps<GroupProps>;\n      skLayer: SkiaProps<ChildrenProps>;\n      skPaint: SkiaProps<PaintProps>;\n\n      // Drawings\n      skFill: SkiaProps<DrawingNodeProps>;\n      skImage: SkiaProps<ImageProps>;\n      skCircle: SkiaProps<CircleProps>;\n      skPath: SkiaProps<PathProps>;\n      skDrawing: SkiaProps<CustomDrawingNodeProps>;\n      skLine: SkiaProps<LineProps>;\n      skOval: SkiaProps<OvalProps>;\n      skPatch: SkiaProps<PatchProps>;\n      skPoints: SkiaProps<PointsProps>;\n      skRect: SkiaProps<RectProps>;\n      skRRect: SkiaProps<RoundedRectProps>;\n      skVertices: SkiaProps<VerticesProps>;\n      skText: SkiaProps<TextProps>;\n      skTextPath: SkiaProps<TextPathProps>;\n      skTextBlob: SkiaProps<TextBlobProps>;\n      skGlyphs: SkiaProps<GlyphsProps>;\n      skDiffRect: SkiaProps<DiffRectProps>;\n      skPicture: SkiaProps<PictureProps>;\n      skImageSVG: SkiaProps<ImageSVGProps>;\n\n      // BlurMaskFilters\n      skBlurMaskFilter: SkiaProps<BlurMaskFilterProps>;\n\n      // ImageFilters\n      skBlendImageFilter: SkiaProps<BlendImageFilterProps>;\n      skBlurImageFilter: SkiaProps<BlurImageFilterProps>;\n      skOffsetImageFilter: SkiaProps<OffsetImageFilterProps>;\n      skDropShadowImageFilter: SkiaProps<DropShadowImageFilterProps>;\n      skDisplacementMapImageFilter: SkiaProps<DisplacementMapImageFilterProps>;\n      skRuntimeShaderImageFilter: SkiaProps<RuntimeShaderImageFilterProps>;\n      skMorphologyImageFilter: SkiaProps<MorphologyImageFilterProps>;\n\n      // ColorFilters\n      skMatrixColorFilter: SkiaProps<MatrixColorFilterProps>;\n      skBlendColorFilter: SkiaProps<BlendColorFilterProps>;\n      skLinearToSRGBGammaColorFilter: SkiaProps<ChildrenProps>;\n      skSRGBToLinearGammaColorFilter: SkiaProps<ChildrenProps>;\n      skLumaColorFilter: SkiaProps<ChildrenProps>;\n      skLerpColorFilter: SkiaProps<LerpColorFilterProps>;\n\n      // Shaders\n      skShader: SkiaProps<ShaderProps>;\n      skImageShader: SkiaProps<ImageShaderProps>;\n      skColorShader: SkiaProps<ColorProps>;\n      skTurbulence: SkiaProps<TurbulenceProps>;\n      skFractalNoise: SkiaProps<FractalNoiseProps>;\n      skLinearGradient: SkiaProps<LinearGradientProps>;\n      skRadialGradient: SkiaProps<RadialGradientProps>;\n      skSweepGradient: SkiaProps<SweepGradientProps>;\n      skTwoPointConicalGradient: SkiaProps<TwoPointConicalGradientProps>;\n\n      // Path Effects\n      skDiscretePathEffect: SkiaProps<DiscretePathEffectProps>;\n      skDashPathEffect: SkiaProps<DashPathEffectProps>;\n      skPath1DPathEffect: SkiaProps<Path1DPathEffectProps>;\n      skPath2DPathEffect: SkiaProps<Path2DPathEffectProps>;\n      skCornerPathEffect: SkiaProps<CornerPathEffectProps>;\n      skSumPathEffect: ChildrenProps;\n      skLine2DPathEffect: SkiaProps<Line2DPathEffectProps>;\n\n      // Mixed declarations/drawings\n      skBlend: SkiaProps<BlendProps>;\n      skBackdropFilter: SkiaProps<ChildrenProps>;\n      skBox: SkiaProps<BoxProps>;\n      skBoxShadow: SkiaProps<BoxShadowProps>;\n    }\n  }\n}\n\nexport const createNode = (\n  container: Container,\n  type: NodeType,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: any\n) => {\n  const { Sk } = container;\n  switch (type) {\n    case NodeType.Layer:\n      return Sk.Layer(props);\n    case NodeType.Group:\n      return Sk.Group(props);\n    case NodeType.Paint:\n      return Sk.Paint(props);\n    // Drawings\n    case NodeType.Fill:\n      return Sk.Fill(props);\n    case NodeType.Image:\n      return Sk.Image(props);\n    case NodeType.Circle:\n      return Sk.Circle(props);\n    case NodeType.Path:\n      return Sk.Path(props);\n    case NodeType.Drawing:\n      return Sk.CustomDrawing(props);\n    case NodeType.Line:\n      return Sk.Line(props);\n    case NodeType.Oval:\n      return Sk.Oval(props);\n    case NodeType.Patch:\n      return Sk.Patch(props);\n    case NodeType.Points:\n      return Sk.Points(props);\n    case NodeType.Rect:\n      return Sk.Rect(props);\n    case NodeType.RRect:\n      return Sk.RRect(props);\n    case NodeType.Vertices:\n      return Sk.Vertices(props);\n    case NodeType.Text:\n      return Sk.Text(props);\n    case NodeType.TextPath:\n      return Sk.TextPath(props);\n    case NodeType.TextBlob:\n      return Sk.TextBlob(props);\n    case NodeType.Glyphs:\n      return Sk.Glyphs(props);\n    case NodeType.DiffRect:\n      return Sk.DiffRect(props);\n    case NodeType.Picture:\n      return Sk.Picture(props);\n    case NodeType.ImageSVG:\n      return Sk.ImageSVG(props);\n    // Mask Filter\n    case NodeType.BlurMaskFilter:\n      return Sk.BlurMaskFilter(props);\n    // Image Filter\n    case NodeType.BlendImageFilter:\n      return Sk.BlendImageFilter(props);\n    case NodeType.BlurImageFilter:\n      return Sk.BlurImageFilter(props);\n    case NodeType.OffsetImageFilter:\n      return Sk.OffsetImageFilter(props);\n    case NodeType.DropShadowImageFilter:\n      return Sk.DropShadowImageFilter(props);\n    case NodeType.DisplacementMapImageFilter:\n      return Sk.DisplacementMapImageFilter(props);\n    case NodeType.MorphologyImageFilter:\n      return Sk.MorphologyImageFilter(props);\n    case NodeType.RuntimeShaderImageFilter:\n      return Sk.RuntimeShaderImageFilter(props);\n    // Color Filter\n    case NodeType.MatrixColorFilter:\n      return Sk.MatrixColorFilter(props);\n    case NodeType.BlendColorFilter:\n      return Sk.BlendColorFilter(props);\n    case NodeType.LerpColorFilter:\n      return Sk.LerpColorFilter(props);\n    case NodeType.LumaColorFilter:\n      return Sk.LumaColorFilter();\n    case NodeType.LinearToSRGBGammaColorFilter:\n      return Sk.LinearToSRGBGammaColorFilter();\n    case NodeType.SRGBToLinearGammaColorFilter:\n      return Sk.SRGBToLinearGammaColorFilter();\n    // Shader\n    case NodeType.Shader:\n      return Sk.Shader(props);\n    case NodeType.ImageShader:\n      return Sk.ImageShader(props);\n    case NodeType.ColorShader:\n      return Sk.ColorShader(props);\n    case NodeType.Turbulence:\n      return Sk.Turbulence(props);\n    case NodeType.FractalNoise:\n      return Sk.FractalNoise(props);\n    case NodeType.LinearGradient:\n      return Sk.LinearGradient(props);\n    case NodeType.RadialGradient:\n      return Sk.RadialGradient(props);\n    case NodeType.SweepGradient:\n      return Sk.SweepGradient(props);\n    case NodeType.TwoPointConicalGradient:\n      return Sk.TwoPointConicalGradient(props);\n    // Path Effect\n    case NodeType.CornerPathEffect:\n      return Sk.CornerPathEffect(props);\n    case NodeType.DiscretePathEffect:\n      return Sk.DiscretePathEffect(props);\n    case NodeType.DashPathEffect:\n      return Sk.DashPathEffect(props);\n    case NodeType.Path1DPathEffect:\n      return Sk.Path1DPathEffect(props);\n    case NodeType.Path2DPathEffect:\n      return Sk.Path2DPathEffect(props);\n    case NodeType.SumPathEffect:\n      return Sk.SumPathEffect();\n    case NodeType.Line2DPathEffect:\n      return Sk.Line2DPathEffect(props);\n    // Mixed\n    case NodeType.Blend:\n      return Sk.Blend(props);\n    case NodeType.BackdropFilter:\n      return Sk.BackdropFilter(props);\n    case NodeType.Box:\n      return Sk.Box(props);\n    case NodeType.BoxShadow:\n      return Sk.BoxShadow(props);\n    default:\n      return exhaustiveCheck(type);\n  }\n};\n"],"mappings":"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"}