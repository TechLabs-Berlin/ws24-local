var _Reanimated, _Reanimated2, _Reanimated3, _Reanimated4;

import { useMemo } from "react";
// This one is needed for the deprecated useSharedValue function
// We can remove it once we remove the deprecation
// eslint-disable-next-line @typescript-eslint/no-explicit-any
let Reanimated2; // eslint-disable-next-line @typescript-eslint/no-explicit-any

let Reanimated3;
let reanimatedVersion;

try {
  Reanimated2 = require("react-native-reanimated");
  reanimatedVersion = // eslint-disable-next-line import/extensions
  require("react-native-reanimated/package.json").version;

  if (reanimatedVersion && (reanimatedVersion >= "3.0.0" || reanimatedVersion.includes("3.0.0-"))) {
    Reanimated3 = Reanimated2;
  }
} catch (e) {}

export const HAS_REANIMATED2 = !!Reanimated2;
export const HAS_REANIMATED3 = !!Reanimated3;

function throwOnMissingReanimated2() {
  if (!HAS_REANIMATED2) {
    throw new Error("Reanimated was not found, make sure react-native-reanimated package is installed if you want to use \
      react-naitve-skia's integration layer API.");
  }
}

function throwOnMissingReanimated3() {
  if (!HAS_REANIMATED3) {
    throw new Error(`Reanimated version ${reanimatedVersion} is not supported, please upgrade to 3.0.0 or newer.`);
  }

  throwOnMissingReanimated2();
}

export const useSharedValue = ((_Reanimated = Reanimated2) === null || _Reanimated === void 0 ? void 0 : _Reanimated.useSharedValue) || (value => useMemo(() => ({
  value
}), [value]));
export const startMapper = ((_Reanimated2 = Reanimated2) === null || _Reanimated2 === void 0 ? void 0 : _Reanimated2.startMapper) || throwOnMissingReanimated2;
export const stopMapper = ((_Reanimated3 = Reanimated2) === null || _Reanimated3 === void 0 ? void 0 : _Reanimated3.stopMapper) || throwOnMissingReanimated2;
export const runOnJS = ((_Reanimated4 = Reanimated2) === null || _Reanimated4 === void 0 ? void 0 : _Reanimated4.runOnJS) || throwOnMissingReanimated2;
export const isSharedValue = value => {
  throwOnMissingReanimated3();
  return !!value && Reanimated3.isSharedValue(value);
};
//# sourceMappingURL=moduleWrapper.js.map