{"version":3,"names":["BlendMode","NodeType","enumKey","JsiDrawingNode","PatchNode","constructor","ctx","props","Patch","deriveProps","colors","blendMode","patch","defaultBlendMode","DstOver","SrcOver","mode","points","pos","c2","c1","map","c","Skia","Color","undefined","draw","canvas","paint","derived","Error","texture","drawPatch"],"sources":["PatchNode.ts"],"sourcesContent":["import type { SkColor, SkPoint } from \"../../../skia/types\";\nimport { BlendMode } from \"../../../skia/types\";\nimport type { DrawingContext, PatchProps } from \"../../types\";\nimport { NodeType } from \"../../types\";\nimport { enumKey } from \"../datatypes\";\nimport { JsiDrawingNode } from \"../DrawingNode\";\nimport type { NodeContext } from \"../Node\";\n\nexport class PatchNode extends JsiDrawingNode<\n  PatchProps,\n  { points: SkPoint[]; colors: SkColor[] | undefined; mode: BlendMode }\n> {\n  constructor(ctx: NodeContext, props: PatchProps) {\n    super(ctx, NodeType.Patch, props);\n  }\n\n  deriveProps() {\n    const { colors, blendMode, patch } = this.props;\n    const defaultBlendMode = colors ? BlendMode.DstOver : BlendMode.SrcOver;\n    const mode = blendMode ? BlendMode[enumKey(blendMode)] : defaultBlendMode;\n    // Patch requires a path with the following constraints:\n    // M tl\n    // C c1 c2 br\n    // C c1 c2 bl\n    // C c1 c2 tl (the redundant point in the last command is removed)\n    return {\n      mode,\n      points: [\n        patch[0].pos,\n        patch[0].c2,\n        patch[1].c1,\n        patch[1].pos,\n        patch[1].c2,\n        patch[2].c1,\n        patch[2].pos,\n        patch[2].c2,\n        patch[3].c1,\n        patch[3].pos,\n        patch[3].c2,\n        patch[0].c1,\n      ],\n      colors: colors ? colors.map((c) => this.Skia.Color(c)) : undefined,\n    };\n  }\n\n  draw({ canvas, paint }: DrawingContext) {\n    if (!this.derived) {\n      throw new Error(\"PatchNode: derived props not set\");\n    }\n    const { texture } = this.props;\n    const { colors, points, mode } = this.derived;\n    canvas.drawPatch(points, colors, texture, mode, paint);\n  }\n}\n"],"mappings":"AACA,SAASA,SAAT,QAA0B,qBAA1B;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAGA,OAAO,MAAMC,SAAN,SAAwBD,cAAxB,CAGL;EACAE,WAAW,CAACC,GAAD,EAAmBC,KAAnB,EAAsC;IAC/C,MAAMD,GAAN,EAAWL,QAAQ,CAACO,KAApB,EAA2BD,KAA3B;EACD;;EAEDE,WAAW,GAAG;IACZ,MAAM;MAAEC,MAAF;MAAUC,SAAV;MAAqBC;IAArB,IAA+B,KAAKL,KAA1C;IACA,MAAMM,gBAAgB,GAAGH,MAAM,GAAGV,SAAS,CAACc,OAAb,GAAuBd,SAAS,CAACe,OAAhE;IACA,MAAMC,IAAI,GAAGL,SAAS,GAAGX,SAAS,CAACE,OAAO,CAACS,SAAD,CAAR,CAAZ,GAAmCE,gBAAzD,CAHY,CAIZ;IACA;IACA;IACA;IACA;;IACA,OAAO;MACLG,IADK;MAELC,MAAM,EAAE,CACNL,KAAK,CAAC,CAAD,CAAL,CAASM,GADH,EAENN,KAAK,CAAC,CAAD,CAAL,CAASO,EAFH,EAGNP,KAAK,CAAC,CAAD,CAAL,CAASQ,EAHH,EAINR,KAAK,CAAC,CAAD,CAAL,CAASM,GAJH,EAKNN,KAAK,CAAC,CAAD,CAAL,CAASO,EALH,EAMNP,KAAK,CAAC,CAAD,CAAL,CAASQ,EANH,EAONR,KAAK,CAAC,CAAD,CAAL,CAASM,GAPH,EAQNN,KAAK,CAAC,CAAD,CAAL,CAASO,EARH,EASNP,KAAK,CAAC,CAAD,CAAL,CAASQ,EATH,EAUNR,KAAK,CAAC,CAAD,CAAL,CAASM,GAVH,EAWNN,KAAK,CAAC,CAAD,CAAL,CAASO,EAXH,EAYNP,KAAK,CAAC,CAAD,CAAL,CAASQ,EAZH,CAFH;MAgBLV,MAAM,EAAEA,MAAM,GAAGA,MAAM,CAACW,GAAP,CAAYC,CAAD,IAAO,KAAKC,IAAL,CAAUC,KAAV,CAAgBF,CAAhB,CAAlB,CAAH,GAA2CG;IAhBpD,CAAP;EAkBD;;EAEDC,IAAI,OAAoC;IAAA,IAAnC;MAAEC,MAAF;MAAUC;IAAV,CAAmC;;IACtC,IAAI,CAAC,KAAKC,OAAV,EAAmB;MACjB,MAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;IACD;;IACD,MAAM;MAAEC;IAAF,IAAc,KAAKxB,KAAzB;IACA,MAAM;MAAEG,MAAF;MAAUO,MAAV;MAAkBD;IAAlB,IAA2B,KAAKa,OAAtC;IACAF,MAAM,CAACK,SAAP,CAAiBf,MAAjB,EAAyBP,MAAzB,EAAiCqB,OAAjC,EAA0Cf,IAA1C,EAAgDY,KAAhD;EACD;;AAzCD"}