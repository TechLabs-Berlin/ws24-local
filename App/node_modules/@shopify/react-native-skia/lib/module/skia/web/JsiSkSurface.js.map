{"version":3,"names":["HostObject","JsiSkCanvas","JsiSkImage","JsiSkRect","JsiSkSurface","constructor","CanvasKit","ref","delete","flush","getCanvas","makeImageSnapshot","bounds","image","Array","from","fromValue","undefined"],"sources":["JsiSkSurface.ts"],"sourcesContent":["import type { CanvasKit, Surface } from \"canvaskit-wasm\";\n\nimport type { SkCanvas, SkImage, SkRect, SkSurface } from \"../types\";\n\nimport { HostObject } from \"./Host\";\nimport { JsiSkCanvas } from \"./JsiSkCanvas\";\nimport { JsiSkImage } from \"./JsiSkImage\";\nimport { JsiSkRect } from \"./JsiSkRect\";\n\nexport class JsiSkSurface\n  extends HostObject<Surface, \"Surface\">\n  implements SkSurface\n{\n  constructor(CanvasKit: CanvasKit, ref: Surface) {\n    super(CanvasKit, ref, \"Surface\");\n  }\n\n  dispose = () => {\n    this.ref.delete();\n  };\n\n  flush() {\n    this.ref.flush();\n  }\n\n  getCanvas(): SkCanvas {\n    return new JsiSkCanvas(this.CanvasKit, this.ref.getCanvas());\n  }\n\n  makeImageSnapshot(bounds?: SkRect): SkImage {\n    const image = this.ref.makeImageSnapshot(\n      bounds\n        ? Array.from(JsiSkRect.fromValue(this.CanvasKit, bounds))\n        : undefined\n    );\n    return new JsiSkImage(this.CanvasKit, image);\n  }\n}\n"],"mappings":";;AAIA,SAASA,UAAT,QAA2B,QAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,YAAN,SACGJ,UADH,CAGP;EACEK,WAAW,CAACC,SAAD,EAAuBC,GAAvB,EAAqC;IAC9C,MAAMD,SAAN,EAAiBC,GAAjB,EAAsB,SAAtB;;IAD8C,iCAItC,MAAM;MACd,KAAKA,GAAL,CAASC,MAAT;IACD,CAN+C;EAE/C;;EAMDC,KAAK,GAAG;IACN,KAAKF,GAAL,CAASE,KAAT;EACD;;EAEDC,SAAS,GAAa;IACpB,OAAO,IAAIT,WAAJ,CAAgB,KAAKK,SAArB,EAAgC,KAAKC,GAAL,CAASG,SAAT,EAAhC,CAAP;EACD;;EAEDC,iBAAiB,CAACC,MAAD,EAA2B;IAC1C,MAAMC,KAAK,GAAG,KAAKN,GAAL,CAASI,iBAAT,CACZC,MAAM,GACFE,KAAK,CAACC,IAAN,CAAWZ,SAAS,CAACa,SAAV,CAAoB,KAAKV,SAAzB,EAAoCM,MAApC,CAAX,CADE,GAEFK,SAHQ,CAAd;IAKA,OAAO,IAAIf,UAAJ,CAAe,KAAKI,SAApB,EAA+BO,KAA/B,CAAP;EACD;;AAxBH"}