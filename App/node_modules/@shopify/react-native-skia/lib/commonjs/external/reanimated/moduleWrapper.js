"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSharedValue = exports.stopMapper = exports.startMapper = exports.runOnJS = exports.isSharedValue = exports.HAS_REANIMATED3 = exports.HAS_REANIMATED2 = void 0;

var _react = require("react");

var _Reanimated, _Reanimated2, _Reanimated3, _Reanimated4;

// This one is needed for the deprecated useSharedValue function
// We can remove it once we remove the deprecation
// eslint-disable-next-line @typescript-eslint/no-explicit-any
let Reanimated2; // eslint-disable-next-line @typescript-eslint/no-explicit-any

let Reanimated3;
let reanimatedVersion;

try {
  Reanimated2 = require("react-native-reanimated");
  reanimatedVersion = // eslint-disable-next-line import/extensions
  require("react-native-reanimated/package.json").version;

  if (reanimatedVersion && (reanimatedVersion >= "3.0.0" || reanimatedVersion.includes("3.0.0-"))) {
    Reanimated3 = Reanimated2;
  }
} catch (e) {}

const HAS_REANIMATED2 = !!Reanimated2;
exports.HAS_REANIMATED2 = HAS_REANIMATED2;
const HAS_REANIMATED3 = !!Reanimated3;
exports.HAS_REANIMATED3 = HAS_REANIMATED3;

function throwOnMissingReanimated2() {
  if (!HAS_REANIMATED2) {
    throw new Error("Reanimated was not found, make sure react-native-reanimated package is installed if you want to use \
      react-naitve-skia's integration layer API.");
  }
}

function throwOnMissingReanimated3() {
  if (!HAS_REANIMATED3) {
    throw new Error(`Reanimated version ${reanimatedVersion} is not supported, please upgrade to 3.0.0 or newer.`);
  }

  throwOnMissingReanimated2();
}

const useSharedValue = ((_Reanimated = Reanimated2) === null || _Reanimated === void 0 ? void 0 : _Reanimated.useSharedValue) || (value => (0, _react.useMemo)(() => ({
  value
}), [value]));

exports.useSharedValue = useSharedValue;
const startMapper = ((_Reanimated2 = Reanimated2) === null || _Reanimated2 === void 0 ? void 0 : _Reanimated2.startMapper) || throwOnMissingReanimated2;
exports.startMapper = startMapper;
const stopMapper = ((_Reanimated3 = Reanimated2) === null || _Reanimated3 === void 0 ? void 0 : _Reanimated3.stopMapper) || throwOnMissingReanimated2;
exports.stopMapper = stopMapper;
const runOnJS = ((_Reanimated4 = Reanimated2) === null || _Reanimated4 === void 0 ? void 0 : _Reanimated4.runOnJS) || throwOnMissingReanimated2;
exports.runOnJS = runOnJS;

const isSharedValue = value => {
  throwOnMissingReanimated3();
  return !!value && Reanimated3.isSharedValue(value);
};

exports.isSharedValue = isSharedValue;
//# sourceMappingURL=moduleWrapper.js.map