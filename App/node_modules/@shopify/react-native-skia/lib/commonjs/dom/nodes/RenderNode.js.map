{"version":3,"names":["paintProps","JsiRenderNode","JsiNode","constructor","ctx","type","props","matrix","Skia","Matrix","onPropChange","setProps","setProp","key","value","hasChanged","includes","paintCache","identity","clipPath","undefined","clipRect","clipRRect","computeMatrix","computeClip","addChild","child","JsiDeclarationNode","setInvalidate","insertChildBefore","before","clip","isPathDef","processPath","isRRect","processTransformProps","render","invertClip","layer","transform","canvas","parentPaint","paint","cache","parent","shouldRestore","saveAndConcat","hasTransform","hasClip","shouldSave","op","ClipOp","Difference","Intersect","saveLayer","save","concat","renderNode","restore"],"sources":["RenderNode.ts"],"sourcesContent":["import type {\n  SkMatrix,\n  SkRect,\n  SkRRect,\n  SkPath,\n  SkPaint,\n} from \"../../skia/types\";\nimport { ClipOp, isRRect } from \"../../skia/types\";\nimport type {\n  RenderNode,\n  GroupProps,\n  NodeType,\n  Node,\n  DrawingContext,\n} from \"../types\";\n\nimport { isPathDef, processPath, processTransformProps } from \"./datatypes\";\nimport type { NodeContext } from \"./Node\";\nimport { JsiNode, JsiDeclarationNode } from \"./Node\";\n\nconst paintProps = [\n  \"color\",\n  \"strokeWidth\",\n  \"blendMode\",\n  \"strokeCap\",\n  \"strokeJoin\",\n  \"strokeMiter\",\n  \"style\",\n  \"antiAlias\",\n  \"opacity\",\n];\n\ninterface PaintCache {\n  parent: SkPaint;\n  child: SkPaint;\n}\n\nexport abstract class JsiRenderNode<P extends GroupProps>\n  extends JsiNode<P>\n  implements RenderNode<P>\n{\n  paintCache: PaintCache | null = null;\n\n  matrix: SkMatrix;\n  clipRect?: SkRect;\n  clipRRect?: SkRRect;\n  clipPath?: SkPath;\n\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, type, props);\n    this.matrix = this.Skia.Matrix();\n    this.onPropChange();\n  }\n\n  setProps(props: P) {\n    super.setProps(props);\n    this.onPropChange();\n  }\n\n  setProp<K extends keyof P>(key: K, value: P[K]) {\n    const hasChanged = super.setProp(key, value);\n    if (hasChanged) {\n      this.onPropChange();\n      if (paintProps.includes(key as string)) {\n        this.paintCache = null;\n      }\n    }\n    return hasChanged;\n  }\n\n  protected onPropChange() {\n    this.matrix.identity();\n    this.clipPath = undefined;\n    this.clipRect = undefined;\n    this.clipRRect = undefined;\n    this.computeMatrix();\n    this.computeClip();\n  }\n\n  addChild(child: Node<unknown>) {\n    if (child instanceof JsiDeclarationNode) {\n      child.setInvalidate(() => {\n        this.paintCache = null;\n      });\n    }\n    super.addChild(child);\n  }\n\n  insertChildBefore(child: Node<unknown>, before: Node<unknown>) {\n    if (child instanceof JsiDeclarationNode) {\n      child.setInvalidate(() => {\n        this.paintCache = null;\n      });\n    }\n    super.insertChildBefore(child, before);\n  }\n\n  private computeClip() {\n    const { clip } = this.props;\n    if (clip) {\n      if (isPathDef(clip)) {\n        this.clipPath = processPath(this.Skia, clip);\n      } else if (isRRect(clip)) {\n        this.clipRRect = clip;\n      } else {\n        this.clipRect = clip;\n      }\n    }\n  }\n\n  private computeMatrix() {\n    processTransformProps(this.matrix, this.props);\n  }\n\n  render(ctx: DrawingContext) {\n    const { invertClip, layer, matrix, transform } = this.props;\n    const { canvas } = ctx;\n    const parentPaint = ctx.paint;\n\n    const cache =\n      this.paintCache !== null && this.paintCache.parent === ctx.paint\n        ? this.paintCache.child\n        : undefined;\n    const shouldRestore = ctx.saveAndConcat(this, cache);\n\n    const hasTransform = matrix !== undefined || transform !== undefined;\n    const hasClip =\n      this.clipRect !== undefined ||\n      this.clipPath !== undefined ||\n      this.clipRRect !== undefined;\n    const shouldSave = hasTransform || hasClip || !!layer;\n    const op = invertClip ? ClipOp.Difference : ClipOp.Intersect;\n    if (shouldSave) {\n      if (layer) {\n        if (typeof layer === \"boolean\") {\n          canvas.saveLayer();\n        } else {\n          canvas.saveLayer(layer);\n        }\n      } else {\n        canvas.save();\n      }\n    }\n\n    if (this.matrix) {\n      canvas.concat(this.matrix);\n    }\n    if (this.clipRect) {\n      canvas.clipRect(this.clipRect, op, true);\n    } else if (this.clipRRect) {\n      canvas.clipRRect(this.clipRRect, op, true);\n    } else if (this.clipPath) {\n      canvas.clipPath(this.clipPath, op, true);\n    }\n\n    this.renderNode(ctx);\n\n    if (shouldSave) {\n      canvas.restore();\n    }\n    if (shouldRestore) {\n      this.paintCache = {\n        parent: parentPaint,\n        child: ctx.paint,\n      };\n      ctx.restore();\n    }\n  }\n\n  abstract renderNode(ctx: DrawingContext): void;\n}\n"],"mappings":"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"}