{"version":3,"names":["PatchNode","JsiDrawingNode","constructor","ctx","props","NodeType","Patch","deriveProps","colors","blendMode","patch","defaultBlendMode","BlendMode","DstOver","SrcOver","mode","enumKey","points","pos","c2","c1","map","c","Skia","Color","undefined","draw","canvas","paint","derived","Error","texture","drawPatch"],"sources":["PatchNode.ts"],"sourcesContent":["import type { SkColor, SkPoint } from \"../../../skia/types\";\nimport { BlendMode } from \"../../../skia/types\";\nimport type { DrawingContext, PatchProps } from \"../../types\";\nimport { NodeType } from \"../../types\";\nimport { enumKey } from \"../datatypes\";\nimport { JsiDrawingNode } from \"../DrawingNode\";\nimport type { NodeContext } from \"../Node\";\n\nexport class PatchNode extends JsiDrawingNode<\n  PatchProps,\n  { points: SkPoint[]; colors: SkColor[] | undefined; mode: BlendMode }\n> {\n  constructor(ctx: NodeContext, props: PatchProps) {\n    super(ctx, NodeType.Patch, props);\n  }\n\n  deriveProps() {\n    const { colors, blendMode, patch } = this.props;\n    const defaultBlendMode = colors ? BlendMode.DstOver : BlendMode.SrcOver;\n    const mode = blendMode ? BlendMode[enumKey(blendMode)] : defaultBlendMode;\n    // Patch requires a path with the following constraints:\n    // M tl\n    // C c1 c2 br\n    // C c1 c2 bl\n    // C c1 c2 tl (the redundant point in the last command is removed)\n    return {\n      mode,\n      points: [\n        patch[0].pos,\n        patch[0].c2,\n        patch[1].c1,\n        patch[1].pos,\n        patch[1].c2,\n        patch[2].c1,\n        patch[2].pos,\n        patch[2].c2,\n        patch[3].c1,\n        patch[3].pos,\n        patch[3].c2,\n        patch[0].c1,\n      ],\n      colors: colors ? colors.map((c) => this.Skia.Color(c)) : undefined,\n    };\n  }\n\n  draw({ canvas, paint }: DrawingContext) {\n    if (!this.derived) {\n      throw new Error(\"PatchNode: derived props not set\");\n    }\n    const { texture } = this.props;\n    const { colors, points, mode } = this.derived;\n    canvas.drawPatch(points, colors, texture, mode, paint);\n  }\n}\n"],"mappings":";;;;;;;AACA;;AAEA;;AACA;;AACA;;AAGO,MAAMA,SAAN,SAAwBC,2BAAxB,CAGL;EACAC,WAAW,CAACC,GAAD,EAAmBC,KAAnB,EAAsC;IAC/C,MAAMD,GAAN,EAAWE,gBAAA,CAASC,KAApB,EAA2BF,KAA3B;EACD;;EAEDG,WAAW,GAAG;IACZ,MAAM;MAAEC,MAAF;MAAUC,SAAV;MAAqBC;IAArB,IAA+B,KAAKN,KAA1C;IACA,MAAMO,gBAAgB,GAAGH,MAAM,GAAGI,gBAAA,CAAUC,OAAb,GAAuBD,gBAAA,CAAUE,OAAhE;IACA,MAAMC,IAAI,GAAGN,SAAS,GAAGG,gBAAA,CAAU,IAAAI,kBAAA,EAAQP,SAAR,CAAV,CAAH,GAAmCE,gBAAzD,CAHY,CAIZ;IACA;IACA;IACA;IACA;;IACA,OAAO;MACLI,IADK;MAELE,MAAM,EAAE,CACNP,KAAK,CAAC,CAAD,CAAL,CAASQ,GADH,EAENR,KAAK,CAAC,CAAD,CAAL,CAASS,EAFH,EAGNT,KAAK,CAAC,CAAD,CAAL,CAASU,EAHH,EAINV,KAAK,CAAC,CAAD,CAAL,CAASQ,GAJH,EAKNR,KAAK,CAAC,CAAD,CAAL,CAASS,EALH,EAMNT,KAAK,CAAC,CAAD,CAAL,CAASU,EANH,EAONV,KAAK,CAAC,CAAD,CAAL,CAASQ,GAPH,EAQNR,KAAK,CAAC,CAAD,CAAL,CAASS,EARH,EASNT,KAAK,CAAC,CAAD,CAAL,CAASU,EATH,EAUNV,KAAK,CAAC,CAAD,CAAL,CAASQ,GAVH,EAWNR,KAAK,CAAC,CAAD,CAAL,CAASS,EAXH,EAYNT,KAAK,CAAC,CAAD,CAAL,CAASU,EAZH,CAFH;MAgBLZ,MAAM,EAAEA,MAAM,GAAGA,MAAM,CAACa,GAAP,CAAYC,CAAD,IAAO,KAAKC,IAAL,CAAUC,KAAV,CAAgBF,CAAhB,CAAlB,CAAH,GAA2CG;IAhBpD,CAAP;EAkBD;;EAEDC,IAAI,OAAoC;IAAA,IAAnC;MAAEC,MAAF;MAAUC;IAAV,CAAmC;;IACtC,IAAI,CAAC,KAAKC,OAAV,EAAmB;MACjB,MAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;IACD;;IACD,MAAM;MAAEC;IAAF,IAAc,KAAK3B,KAAzB;IACA,MAAM;MAAEI,MAAF;MAAUS,MAAV;MAAkBF;IAAlB,IAA2B,KAAKc,OAAtC;IACAF,MAAM,CAACK,SAAP,CAAiBf,MAAjB,EAAyBT,MAAzB,EAAiCuB,OAAjC,EAA0ChB,IAA1C,EAAgDa,KAAhD;EACD;;AAzCD"}