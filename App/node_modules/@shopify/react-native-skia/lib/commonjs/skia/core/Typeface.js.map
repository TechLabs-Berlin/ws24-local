{"version":3,"names":["tfFactory","Skia","Typeface","MakeFreeTypeFaceFromData","bind","useTypeface","source","onError","useRawData"],"sources":["Typeface.ts"],"sourcesContent":["import { Skia } from \"../Skia\";\nimport type { DataSourceParam } from \"../types\";\n\nimport { useRawData } from \"./Data\";\n\nconst tfFactory = Skia.Typeface.MakeFreeTypeFaceFromData.bind(Skia.Typeface);\n\n/**\n * Returns a Skia Typeface object\n * */\nexport const useTypeface = (\n  source: DataSourceParam,\n  onError?: (err: Error) => void\n) => useRawData(source, tfFactory, onError);\n"],"mappings":";;;;;;;AAAA;;AAGA;;AAEA,MAAMA,SAAS,GAAGC,UAAA,CAAKC,QAAL,CAAcC,wBAAd,CAAuCC,IAAvC,CAA4CH,UAAA,CAAKC,QAAjD,CAAlB;AAEA;AACA;AACA;;;AACO,MAAMG,WAAW,GAAG,CACzBC,MADyB,EAEzBC,OAFyB,KAGtB,IAAAC,gBAAA,EAAWF,MAAX,EAAmBN,SAAnB,EAA8BO,OAA9B,CAHE"}