{"version":3,"names":["createTiming","params","value","callback","resolvedParams","from","current","animationFunction","t","state","nextState","timing","duration","easing","loop","yoyo","finished","to","ValueApi","createAnimation"],"sources":["createTiming.ts"],"sourcesContent":["import type {\n  TimingConfig,\n  RequiredAnimationParams,\n  AnimationCallback,\n} from \"../types\";\nimport type { AnimationState, SkiaMutableValue } from \"../../values/types\";\nimport { ValueApi } from \"../../values/api\";\n\nimport { timing } from \"./functions\";\n\n/**\n * Creates an animation that is driven by a clock value.\n * The value will be run from / to the value in params and modified\n * by the provided easing curve for the length of the duration. When\n * the value has reached its desired \"to\" value the animation\n * will be stopped. If loop is set to true, the animation will continue\n * to run until stopped.\n *\n * @param params Animation parameters\n * @param config Spring or timing configuration\n * @param value Optional value that the animation will update\n * @params an animation value that can be used to start/stop\n * the animation.\n */\nexport const createTiming = (\n  params: RequiredAnimationParams & Required<TimingConfig>,\n  value?: SkiaMutableValue<number>,\n  callback?: AnimationCallback\n) => {\n  // Update from to be either the declared from value,\n  // the current value of the value or zero\n  const resolvedParams = {\n    ...params,\n    from: params.from ?? value?.current ?? 0,\n  };\n\n  // Update function for the animation value\n  const animationFunction = (t: number, state: AnimationState | undefined) => {\n    // Update the input value using the provided update function\n    const nextState = timing(\n      t,\n      params.duration,\n      params.easing,\n      params.loop ?? false,\n      params.yoyo ?? false,\n      state ?? { current: params.from!, finished: false }\n    );\n    const current =\n      nextState.current * (resolvedParams.to - resolvedParams.from!) +\n      resolvedParams.from!;\n    if (callback && nextState.finished === true) {\n      callback(current);\n    }\n    return {\n      ...nextState,\n      current,\n    };\n  };\n\n  // Create animation value\n  return ValueApi.createAnimation(animationFunction);\n};\n"],"mappings":";;;;;;;AAMA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,YAAY,GAAG,CAC1BC,MAD0B,EAE1BC,KAF0B,EAG1BC,QAH0B,KAIvB;EACH;EACA;EACA,MAAMC,cAAc,GAAG,EACrB,GAAGH,MADkB;IAErBI,IAAI,EAAEJ,MAAM,CAACI,IAAP,KAAeH,KAAf,aAAeA,KAAf,uBAAeA,KAAK,CAAEI,OAAtB,KAAiC;EAFlB,CAAvB,CAHG,CAQH;;EACA,MAAMC,iBAAiB,GAAG,CAACC,CAAD,EAAYC,KAAZ,KAAkD;IAC1E;IACA,MAAMC,SAAS,GAAG,IAAAC,iBAAA,EAChBH,CADgB,EAEhBP,MAAM,CAACW,QAFS,EAGhBX,MAAM,CAACY,MAHS,EAIhBZ,MAAM,CAACa,IAAP,IAAe,KAJC,EAKhBb,MAAM,CAACc,IAAP,IAAe,KALC,EAMhBN,KAAK,IAAI;MAAEH,OAAO,EAAEL,MAAM,CAACI,IAAlB;MAAyBW,QAAQ,EAAE;IAAnC,CANO,CAAlB;IAQA,MAAMV,OAAO,GACXI,SAAS,CAACJ,OAAV,IAAqBF,cAAc,CAACa,EAAf,GAAoBb,cAAc,CAACC,IAAxD,IACAD,cAAc,CAACC,IAFjB;;IAGA,IAAIF,QAAQ,IAAIO,SAAS,CAACM,QAAV,KAAuB,IAAvC,EAA6C;MAC3Cb,QAAQ,CAACG,OAAD,CAAR;IACD;;IACD,OAAO,EACL,GAAGI,SADE;MAELJ;IAFK,CAAP;EAID,CApBD,CATG,CA+BH;;;EACA,OAAOY,aAAA,CAASC,eAAT,CAAyBZ,iBAAzB,CAAP;AACD,CArCM"}