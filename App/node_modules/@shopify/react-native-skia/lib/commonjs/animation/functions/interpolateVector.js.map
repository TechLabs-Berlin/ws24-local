{"version":3,"names":["interpolateVector","value","inputRange","outputRange","options","x","interpolate","map","v","y","mixVector","from","to"],"sources":["interpolateVector.ts"],"sourcesContent":["import type { Vector } from \"../../skia/types\";\n\nimport { interpolate } from \"./interpolate\";\n\nexport const interpolateVector = (\n  value: number,\n  inputRange: readonly number[],\n  outputRange: readonly Vector[],\n  options?: Parameters<typeof interpolate>[3]\n) => {\n  \"worklet\";\n  return {\n    x: interpolate(\n      value,\n      inputRange,\n      outputRange.map((v) => v.x),\n      options\n    ),\n    y: interpolate(\n      value,\n      inputRange,\n      outputRange.map((v) => v.y),\n      options\n    ),\n  };\n};\n\nexport const mixVector = (value: number, from: Vector, to: Vector) => {\n  \"worklet\";\n  return interpolateVector(value, [0, 1], [from, to]);\n};\n"],"mappings":";;;;;;;AAEA;;AAEO,MAAMA,iBAAiB,GAAG,CAC/BC,KAD+B,EAE/BC,UAF+B,EAG/BC,WAH+B,EAI/BC,OAJ+B,KAK5B;EACH;;EACA,OAAO;IACLC,CAAC,EAAE,IAAAC,wBAAA,EACDL,KADC,EAEDC,UAFC,EAGDC,WAAW,CAACI,GAAZ,CAAiBC,CAAD,IAAOA,CAAC,CAACH,CAAzB,CAHC,EAIDD,OAJC,CADE;IAOLK,CAAC,EAAE,IAAAH,wBAAA,EACDL,KADC,EAEDC,UAFC,EAGDC,WAAW,CAACI,GAAZ,CAAiBC,CAAD,IAAOA,CAAC,CAACC,CAAzB,CAHC,EAIDL,OAJC;EAPE,CAAP;AAcD,CArBM;;;;AAuBA,MAAMM,SAAS,GAAG,CAACT,KAAD,EAAgBU,IAAhB,EAA8BC,EAA9B,KAA6C;EACpE;;EACA,OAAOZ,iBAAiB,CAACC,KAAD,EAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR,EAAgB,CAACU,IAAD,EAAOC,EAAP,CAAhB,CAAxB;AACD,CAHM"}